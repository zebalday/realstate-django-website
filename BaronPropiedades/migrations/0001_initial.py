# Generated by Django 4.0.6 on 2024-02-04 21:33

import BaronPropiedades.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(max_length=150, verbose_name='Nombre')),
                ('email', models.EmailField(max_length=250, unique=True, verbose_name='Correo')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region='CL', unique=True, verbose_name='Teléfono')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creado el')),
            ],
            options={
                'verbose_name': 'Cliente',
                'verbose_name_plural': 'Clientes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Comuna',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Comuna')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creada el')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Actualizada el')),
            ],
            options={
                'verbose_name': 'Comuna',
                'verbose_name_plural': 'Comunas',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, verbose_name='Título')),
                ('address', models.CharField(max_length=150, verbose_name='Dirección')),
                ('price', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Precio')),
                ('is_UF', models.BooleanField(default=False, verbose_name='¿Precio en UF?')),
                ('squared_meters', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Metros cuadrados')),
                ('rooms', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Número de dormitorios')),
                ('baths', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Número de baños')),
                ('has_furnitures', models.BooleanField(default=False, verbose_name='¿Está amoblado?')),
                ('has_internet', models.BooleanField(default=False, verbose_name='¿Tiene Wi-Fi?')),
                ('has_tv', models.BooleanField(default=False, verbose_name='¿Tiene Televisión?')),
                ('has_laundry', models.BooleanField(default=False, verbose_name='¿Tiene lavadora?')),
                ('has_parking', models.BooleanField(default=False, verbose_name='¿Tiene estacionamiento?')),
                ('has_storage', models.BooleanField(default=False, verbose_name='¿Tiene bodega?')),
                ('has_balcony', models.BooleanField(default=False, verbose_name='¿Tiene balcón?')),
                ('has_elevator', models.BooleanField(default=False, verbose_name='¿Tiene ascensor?')),
                ('has_pool', models.BooleanField(default=False, verbose_name='¿Tiene piscina?')),
                ('has_energy_disposal', models.BooleanField(default=False, verbose_name='¿Tiene disponibilidad de luz?')),
                ('has_water_disposal', models.BooleanField(default=False, verbose_name='¿Tiene disponibilidad de agua?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creada el')),
                ('updated_at', models.DateTimeField(auto_now_add=True, verbose_name='Actualizada el')),
                ('comuna', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BaronPropiedades.comuna', verbose_name='Comuna')),
            ],
            options={
                'verbose_name': 'Propiedad',
                'verbose_name_plural': 'Propiedades',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PropertyType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Tipo de propiedad')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creado el')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Actualizado el')),
            ],
            options={
                'verbose_name': 'Tipo de propiedad',
                'verbose_name_plural': 'Tipos de propiedad',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Región')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creada el')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Actualizada el')),
            ],
            options={
                'verbose_name': 'Región',
                'verbose_name_plural': 'Regiones',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ServiceType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Tipo de servicio')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creado el')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Actualizado el')),
            ],
            options={
                'verbose_name': 'Tipo de servicio',
                'verbose_name_plural': 'Tipos de servicios',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PropertyImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to=BaronPropiedades.models.get_image_upload_path, validators=[BaronPropiedades.models.validate_image_size])),
                ('is_thumbnail', models.BooleanField(blank=True, default=False, null=True, verbose_name='¿Mostrar imagen como miniatura?')),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BaronPropiedades.property', verbose_name='Fotos de propiedad')),
            ],
            options={
                'verbose_name': 'Imagen',
                'verbose_name_plural': 'Imágenes',
            },
        ),
        migrations.AddField(
            model_name='property',
            name='property_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BaronPropiedades.propertytype', verbose_name='Tipo de propiedad'),
        ),
        migrations.AddField(
            model_name='property',
            name='service_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BaronPropiedades.servicetype', verbose_name='Tipo de servicio'),
        ),
        migrations.CreateModel(
            name='InterestedPropertyClient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creada el')),
                ('client', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, to='BaronPropiedades.client', verbose_name='Cliente interesado')),
                ('property', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, to='BaronPropiedades.property', verbose_name='Propiedad de interés')),
            ],
            options={
                'verbose_name': 'Cliente interesado',
                'verbose_name_plural': 'Clientes interesados',
            },
        ),
        migrations.AddField(
            model_name='comuna',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BaronPropiedades.region'),
        ),
    ]
